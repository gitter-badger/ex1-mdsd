import 'componentModel.ecore'
import 'assembly.ecore'
import 'environment.ecore'

package componentModel

context SystemIndependentViewPoint
--
-- example invariant with a custom error message to verify that
-- the 'repository' property of all 'componentModel::SystemIndependentViewPoint' instances is non-null
--
inv NonNull_repository('The \'repository\' property of "' + self.toString() + '" is null'):
	repository <> null

endpackage


context assembly::AssemblyConnector
inv assemblyContextsNotEqual : (not (self.providedrole.assemblyContext = self.requiredrole.assemblyContext)) = true

	

context assembly::RequiredRole
	inv: self.assemblyContext.instantiatedComponent.interfaceServiceMap ->select(entry | entry.service -> select(service| service.required 
		-> includes(self.interface)))  -> notEmpty() and not (self.assemblyContext.instantiatedComponent = null)
		
context assembly::ProvidedRole
	inv: self.assemblyContext.instantiatedComponent.interfaceServiceMap ->select(entry | entry.service -> select(service| service.correspondence -> union(entry.providedInterface.signatures)
		))  -> notEmpty() and not (self.assemblyContext.instantiatedComponent = null)	
	
context assembly::AssemblyConnector
	inv:let contextsOfRoles =  Set{self.providedrole.assemblyContext, self.requiredrole.assemblyContext},
	containerOfRoles = environment::Container -> collect(allocationcontext) -> select(ac | contextsOfRoles ->includes(ac.assemblycontext))
	in (containerOfRoles -> size() = 1 )xor (environment::Link -> collect(container) -> includesAll(containerOfRoles) = true)
	
	
